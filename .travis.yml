language: cpp

matrix:
  include:
    - compiler: gcc
      os: linux
      env:
        - TARGET=linux64
        - OUTDIR=linux64_gcc
    - compiler: gcc
      os: linux
      env:
        - TARGET=linux32-arm
        - OUTDIR=linux32_arm_gcc
    - compiler: clang
      os: osx
      env:
        - TARGET=osx
        - OUTDIR=osx64_clang

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-8
      - g++-8
      - clang
      - libgl1-mesa-dev
      - x11proto-core-dev
      - libx11-dev

branches:
  only:
    - master

notifications:
  email: false

osx_image: xcode9.3

# -------------------------------------------------------------

install:
  - if [ "$TARGET" == "linux32-arm" ]; then
      curl -L https://releases.linaro.org/components/toolchain/binaries/latest-7/arm-linux-gnueabihf/gcc-linaro-7.4.1-2019.02-x86_64_arm-linux-gnueabihf.tar.xz | tar -Jx -C /opt;
      export PATH=/opt/gcc-linaro-7.4.1-2019.02-x86_64_arm-linux-gnueabihf/bin:$PATH;
    fi

before_script:
  - git clone --depth 1 https://github.com/bkaradzic/bx ../bx
  - git clone --depth 1 https://github.com/bkaradzic/bimg ../bimg
  - ln -s /usr/include/X11 ./3rdparty/;

script:
  - if [ "$TARGET" == "linux64" ]; then make build CXX="g++-8" CC="gcc-8"; fi
  - if [ "$TARGET" == "linux32-arm" ]; then make linux-arm CC=arm-linux-gnueabihf-gcc CXX=arm-linux-gnueabihf-g++ AR=arm-linux-gnueabihf-ar; fi
  - if [ "$TARGET" == "osx" ]; then make build; fi

before_deploy:
  - mkdir artifacts
  - pushd .build/${OUTDIR}/bin/;
    mkdir -p Debug Release;
    for file in *; do
      if [[ $file == "Debug" ]] || [[ $file == "Release" ]]; then
        :;
      elif [[ $file == *"Debug"* ]]; then
        mv $file Debug/${file/Debug/};
      elif [[ $file == *"Release"* ]]; then
        mv $file Release/${file/Release/};
      fi
    done;
    popd
  - export TAG=$(date +'%Y%m%d')-$(git log --format=%h -1)
  - if [ "$TARGET" == "osx" ]; then
      tar -cJf artifacts/${TARGET}-${TAG}.tar.xz -C .build/${OUTDIR}/bin/ .;
    else
      tar -acvf artifacts/${TARGET}-${TAG}.tar.xz -C .build/${OUTDIR}/bin/ .;
    fi

deploy:
  provider: s3
  region: ap-northeast-1
  access_key_id: AKIA5WY7QBXMBTSV4E6N
  secret_access_key:
    secure: xBT3TQ6vxqiDnq6zdmCeN0uBQ2eOqMWXPT46IjokeJOngZkh/easxyv6FqaZuMCOVcOzOsfG7nx9+1ecoG0iykZ3on4UF/bLLL7JH+w5tOI9MzqMB8qbxq1w3H6GWWk+hXKXOKSBid2zsWeSkHAuZP2a1vps07S+fuzMYlkvQerwpSQTZ2LocyWrksB7U+d/cvw4sQX95Tz5zbvjTugrdMpPaKFz4aMBxBIFDrgMl9u2WEYdp/xFTxkkfvufKXhRD3clAInwJ6ja1V0SvA4sDET5+JF3MMM2uSopAuqDeQlq2v6+kbjBqXNTZBRLYyI/KYTdyy9PW9RVjsZCRerDLHdXdsB2tFiC9E5blsTYJ4eT6qaf+mCzo1ndWGXnfhlbKMZK/Waa6n7LwtEVNkPRqH6r5gP0dT2QqBN9+VPTsiVicUM1W8nXhi/f/QB8MG0r9a2dbFhjxfRZrO6SUM53RpnDX/zlqcD3FsckMSsq4uL7S3CvmoNXhjUcRdFFgchmfmZtSAaM9vx+ZMJnvxl9PQpVxp3u6hHZj14v6NzTOcnbV3WEzSO/Lo33gv2Q7+FFETBhmAPlWqb06kMS+Zy1jGX9XT1VqVxNbocDntwaEbpd8b8ZnTdqEffFHD49YRXPKJqc4eQ+MTM9PYBTlS3OmsLZ1O7tWaP5XebJ2/MxuWw=
  bucket: bgfx
  skip_cleanup: true
  local_dir: artifacts
  upload_dir: ${TAG}
  on:
    repo: Saqoosha/bgfx
